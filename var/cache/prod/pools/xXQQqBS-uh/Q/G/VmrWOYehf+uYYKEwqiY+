1580846595
Akeneo.Channel.Component.Model.Channel
O:49:"Symfony\Component\Validator\Mapping\ClassMetadata":10:{s:11:"constraints";a:2:{i:0;O:58:"Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity":10:{s:7:"message";s:27:"This value is already used.";s:7:"service";s:29:"doctrine.orm.validator.unique";s:2:"em";N;s:11:"entityClass";N;s:16:"repositoryMethod";s:6:"findBy";s:6:"fields";s:4:"code";s:9:"errorPath";N;s:10:"ignoreNull";b:1;s:7:"payload";N;s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}i:1;O:66:"Akeneo\Tool\Component\StorageUtils\Validator\Constraints\Immutable":4:{s:10:"properties";a:1:{i:0;s:4:"code";}s:7:"message";s:32:"This property cannot be changed.";s:7:"payload";N;s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}}s:18:"constraintsByGroup";a:2:{s:7:"Default";a:2:{i:0;r:3;i:1;r:16;}s:7:"Channel";a:2:{i:0;r:3;i:1;r:16;}}s:17:"traversalStrategy";i:1;s:7:"getters";a:0:{}s:13:"groupSequence";a:0:{}s:21:"groupSequenceProvider";b:0;s:7:"members";a:6:{s:4:"code";a:1:{i:0;O:52:"Symfony\Component\Validator\Mapping\PropertyMetadata":7:{s:11:"constraints";a:3:{i:0;O:48:"Symfony\Component\Validator\Constraints\NotBlank":3:{s:7:"message";s:31:"This value should not be blank.";s:7:"payload";N;s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}i:1;O:45:"Symfony\Component\Validator\Constraints\Regex":6:{s:7:"message";s:62:"Channel code may contain only letters, numbers and underscores";s:7:"pattern";s:17:"/^[a-zA-Z0-9_]+$/";s:11:"htmlPattern";N;s:5:"match";b:1;s:7:"payload";N;s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}i:2;O:46:"Symfony\Component\Validator\Constraints\Length":9:{s:10:"maxMessage";s:140:"This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.";s:10:"minMessage";s:142:"This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.";s:12:"exactMessage";s:108:"This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.";s:14:"charsetMessage";s:61:"This value does not match the expected {{ charset }} charset.";s:3:"max";i:100;s:3:"min";N;s:7:"charset";s:5:"UTF-8";s:7:"payload";N;s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}}s:18:"constraintsByGroup";a:2:{s:7:"Default";a:3:{i:0;r:39;i:1;r:45;i:2;r:54;}s:7:"Channel";a:3:{i:0;r:39;i:1;r:45;i:2;r:54;}}s:17:"cascadingStrategy";i:1;s:17:"traversalStrategy";i:2;s:5:"class";s:38:"Akeneo\Channel\Component\Model\Channel";s:4:"name";s:4:"code";s:8:"property";s:4:"code";}}s:8:"category";a:1:{i:0;O:52:"Symfony\Component\Validator\Mapping\PropertyMetadata":7:{s:11:"constraints";a:2:{i:0;O:48:"Symfony\Component\Validator\Constraints\NotBlank":3:{s:7:"message";s:31:"This value should not be blank.";s:7:"payload";a:1:{s:20:"standardPropertyName";s:4:"tree";}s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}i:1;O:60:"Akeneo\Channel\Component\Validator\Constraint\IsRootCategory":3:{s:7:"message";s:52:"The category "%category%" has to be a root category.";s:7:"payload";a:1:{s:20:"standardPropertyName";s:4:"tree";}s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}}s:18:"constraintsByGroup";a:2:{s:7:"Default";a:2:{i:0;r:83;i:1;r:90;}s:7:"Channel";a:2:{i:0;r:83;i:1;r:90;}}s:17:"cascadingStrategy";i:1;s:17:"traversalStrategy";i:2;s:5:"class";s:38:"Akeneo\Channel\Component\Model\Channel";s:4:"name";s:8:"category";s:8:"property";s:8:"category";}}s:10:"currencies";a:1:{i:0;O:52:"Symfony\Component\Validator\Mapping\PropertyMetadata":7:{s:11:"constraints";a:2:{i:0;O:45:"Symfony\Component\Validator\Constraints\Count":7:{s:10:"minMessage";s:120:"This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.";s:10:"maxMessage";s:120:"This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.";s:12:"exactMessage";s:120:"This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.";s:3:"min";i:1;s:3:"max";N;s:7:"payload";N;s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}i:1;O:43:"Symfony\Component\Validator\Constraints\All":3:{s:11:"constraints";a:1:{i:0;O:65:"Akeneo\Channel\Component\Validator\Constraint\IsCurrencyActivated":3:{s:7:"message";s:46:"The currency "%currency%" has to be activated.";s:7:"payload";a:1:{s:20:"standardPropertyName";s:10:"currencies";}s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}}s:7:"payload";N;s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}}s:18:"constraintsByGroup";a:2:{s:7:"Default";a:2:{i:0;r:112;i:1;r:122;}s:7:"Channel";a:2:{i:0;r:112;i:1;r:122;}}s:17:"cascadingStrategy";i:1;s:17:"traversalStrategy";i:2;s:5:"class";s:38:"Akeneo\Channel\Component\Model\Channel";s:4:"name";s:10:"currencies";s:8:"property";s:10:"currencies";}}s:7:"locales";a:1:{i:0;O:52:"Symfony\Component\Validator\Mapping\PropertyMetadata":7:{s:11:"constraints";a:1:{i:0;O:45:"Symfony\Component\Validator\Constraints\Count":7:{s:10:"minMessage";s:120:"This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.";s:10:"maxMessage";s:120:"This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.";s:12:"exactMessage";s:120:"This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.";s:3:"min";i:1;s:3:"max";N;s:7:"payload";N;s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}}s:18:"constraintsByGroup";a:2:{s:7:"Default";a:1:{i:0;r:150;}s:7:"Channel";a:1:{i:0;r:150;}}s:17:"cascadingStrategy";i:1;s:17:"traversalStrategy";i:2;s:5:"class";s:38:"Akeneo\Channel\Component\Model\Channel";s:4:"name";s:7:"locales";s:8:"property";s:7:"locales";}}s:12:"translations";a:1:{i:0;O:52:"Symfony\Component\Validator\Mapping\PropertyMetadata":7:{s:11:"constraints";a:0:{}s:18:"constraintsByGroup";a:0:{}s:17:"cascadingStrategy";i:2;s:17:"traversalStrategy";i:1;s:5:"class";s:38:"Akeneo\Channel\Component\Model\Channel";s:4:"name";s:12:"translations";s:8:"property";s:12:"translations";}}s:15:"conversionUnits";a:1:{i:0;O:52:"Symfony\Component\Validator\Mapping\PropertyMetadata":7:{s:11:"constraints";a:1:{i:0;O:61:"Akeneo\Channel\Component\Validator\Constraint\ConversionUnits":5:{s:20:"invalidAttributeCode";s:47:"The attribute "%attributeCode%" does not exist.";s:19:"notAMetricAttribute";s:58:"The attribute "%attributeCode%" is not a metric attribute.";s:15:"invalidUnitCode";s:126:"The unit "%unitCode%" does not exist or does not belong to the default metric family of the given attribute "%attributeCode%".";s:7:"payload";N;s:6:"groups";a:2:{i:0;s:7:"Default";i:1;s:7:"Channel";}}}s:18:"constraintsByGroup";a:2:{s:7:"Default";a:1:{i:0;r:182;}s:7:"Channel";a:1:{i:0;r:182;}}s:17:"cascadingStrategy";i:1;s:17:"traversalStrategy";i:2;s:5:"class";s:38:"Akeneo\Channel\Component\Model\Channel";s:4:"name";s:15:"conversionUnits";s:8:"property";s:15:"conversionUnits";}}}s:4:"name";s:38:"Akeneo\Channel\Component\Model\Channel";s:10:"properties";a:6:{s:4:"code";r:37;s:8:"category";r:81;s:10:"currencies";r:110;s:7:"locales";r:148;s:12:"translations";r:171;s:15:"conversionUnits";r:180;}s:12:"defaultGroup";s:7:"Channel";}