<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'akeneo.pim.enrichment.controller.product_grid_category_tree' shared service.

return $this->services['akeneo.pim.enrichment.controller.product_grid_category_tree'] = new \Akeneo\Pim\Enrichment\Bundle\Controller\InternalApi\ProductGridCategoryTreeController(${($_ = isset($this->services['akeneo.pim.enrichment.category.category_tree.list_root_categories_with_count_handler']) ? $this->services['akeneo.pim.enrichment.category.category_tree.list_root_categories_with_count_handler'] : $this->load(__DIR__.'/getAkeneo_Pim_Enrichment_Category_CategoryTree_ListRootCategoriesWithCountHandlerService.php')) && false ?: '_'}, ${($_ = isset($this->services['akeneo.pim.enrichment.category.category_tree.list_children_categories_with_count_handler']) ? $this->services['akeneo.pim.enrichment.category.category_tree.list_children_categories_with_count_handler'] : $this->load(__DIR__.'/getAkeneo_Pim_Enrichment_Category_CategoryTree_ListChildrenCategoriesWithCountHandlerService.php')) && false ?: '_'}, ${($_ = isset($this->services['akeneo.pim.enrichment.category.category_tree.normalizer.root_category']) ? $this->services['akeneo.pim.enrichment.category.category_tree.normalizer.root_category'] : $this->services['akeneo.pim.enrichment.category.category_tree.normalizer.root_category'] = new \Akeneo\Pim\Enrichment\Component\Category\CategoryTree\Normalizer\RootCategory()) && false ?: '_'}, ${($_ = isset($this->services['akeneo.pim.enrichment.category.category_tree.normalizer.child_category']) ? $this->services['akeneo.pim.enrichment.category.category_tree.normalizer.child_category'] : $this->services['akeneo.pim.enrichment.category.category_tree.normalizer.child_category'] = new \Akeneo\Pim\Enrichment\Component\Category\CategoryTree\Normalizer\ChildCategory()) && false ?: '_'}, ${($_ = isset($this->services['pim_user.context.user']) ? $this->services['pim_user.context.user'] : $this->getPimUser_Context_UserService()) && false ?: '_'}, ${($_ = isset($this->services['oro_security.security_facade']) ? $this->services['oro_security.security_facade'] : $this->getOroSecurity_SecurityFacadeService()) && false ?: '_'});
