<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'pim_datagrid.controller.product_export' shared service.

return $this->services['pim_datagrid.controller.product_export'] = new \Oro\Bundle\PimDataGridBundle\Controller\ProductExportController(${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack()) && false ?: '_'}, ${($_ = isset($this->services['pim_datagrid.extension.mass_action.dispatcher']) ? $this->services['pim_datagrid.extension.mass_action.dispatcher'] : $this->load(__DIR__.'/getPimDatagrid_Extension_MassAction_DispatcherService.php')) && false ?: '_'}, ${($_ = isset($this->services['pim_datagrid.adapter.oro_to_pim_grid_filter']) ? $this->services['pim_datagrid.adapter.oro_to_pim_grid_filter'] : $this->load(__DIR__.'/getPimDatagrid_Adapter_OroToPimGridFilterService.php')) && false ?: '_'}, ${($_ = isset($this->services['akeneo_batch.job.job_instance_repository']) ? $this->services['akeneo_batch.job.job_instance_repository'] : $this->load(__DIR__.'/getAkeneoBatch_Job_JobInstanceRepositoryService.php')) && false ?: '_'}, ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage()) && false ?: '_'}, ${($_ = isset($this->services['akeneo_batch_queue.launcher.queue_job_launcher']) ? $this->services['akeneo_batch_queue.launcher.queue_job_launcher'] : $this->load(__DIR__.'/getAkeneoBatchQueue_Launcher_QueueJobLauncherService.php')) && false ?: '_'}, ${($_ = isset($this->services['oro_datagrid.datagrid.manager']) ? $this->services['oro_datagrid.datagrid.manager'] : $this->services['oro_datagrid.datagrid.manager'] = new \Oro\Bundle\DataGridBundle\Datagrid\Manager($this)) && false ?: '_'}, ${($_ = isset($this->services['oro_datagrid.mass_action.parameters_parser']) ? $this->services['oro_datagrid.mass_action.parameters_parser'] : $this->services['oro_datagrid.mass_action.parameters_parser'] = new \Oro\Bundle\DataGridBundle\Extension\MassAction\MassActionParametersParser()) && false ?: '_'});
