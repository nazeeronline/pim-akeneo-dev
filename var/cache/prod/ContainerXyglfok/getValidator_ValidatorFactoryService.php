<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'validator.validator_factory' shared service.

return $this->services['validator.validator_factory'] = new \Symfony\Component\Validator\ContainerConstraintValidatorFactory(new \Symfony\Component\DependencyInjection\ServiceLocator(array('Akeneo\\Channel\\Component\\Validator\\Constraint\\ActivatedLocaleValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.activated_locale']) ? $this->services['pim_catalog.validator.constraint.activated_locale'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ActivatedLocaleService.php')) && false ?: '_'};
}, 'Akeneo\\Channel\\Component\\Validator\\Constraint\\ConversionUnitsValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraints.conversion_units']) ? $this->services['pim_catalog.validator.constraints.conversion_units'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraints_ConversionUnitsService.php')) && false ?: '_'};
}, 'Akeneo\\Channel\\Component\\Validator\\Constraint\\IsCurrencyActivatedValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraints.is_currency_activated']) ? $this->services['pim_catalog.validator.constraints.is_currency_activated'] : $this->services['pim_catalog.validator.constraints.is_currency_activated'] = new \Akeneo\Channel\Component\Validator\Constraint\IsCurrencyActivatedValidator()) && false ?: '_'};
}, 'Akeneo\\Channel\\Component\\Validator\\Constraint\\IsRootCategoryValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraints.is_root_category']) ? $this->services['pim_catalog.validator.constraints.is_root_category'] : $this->services['pim_catalog.validator.constraints.is_root_category'] = new \Akeneo\Channel\Component\Validator\Constraint\IsRootCategoryValidator()) && false ?: '_'};
}, 'Akeneo\\Channel\\Component\\Validator\\Constraint\\LocaleValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraints.locale_validator']) ? $this->services['pim_catalog.validator.constraints.locale_validator'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraints_LocaleValidatorService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\ChannelValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraints.channel_validator']) ? $this->services['pim_catalog.validator.constraints.channel_validator'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraints_ChannelValidatorService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\CurrencyValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.currency']) ? $this->services['pim_catalog.validator.constraint.currency'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_CurrencyService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\FileValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.file_extensions_and_mimetypes']) ? $this->services['pim_catalog.validator.constraint.file_extensions_and_mimetypes'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_FileExtensionsAndMimetypesService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\FilterDataValidator' => function () {
    return ${($_ = isset($this->services['pim_connector.validator.constraints.product_model_filter_data_validator']) ? $this->services['pim_connector.validator.constraints.product_model_filter_data_validator'] : $this->load(__DIR__.'/getPimConnector_Validator_Constraints_ProductModelFilterDataValidatorService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\FilterStructureAttributeValidator' => function () {
    return ${($_ = isset($this->services['pim_connector.validator.constraints.filter_structure_attribute_validator']) ? $this->services['pim_connector.validator.constraints.filter_structure_attribute_validator'] : $this->load(__DIR__.'/getPimConnector_Validator_Constraints_FilterStructureAttributeValidatorService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\FilterStructureLocaleValidator' => function () {
    return ${($_ = isset($this->services['pim_connector.validator.constraints.filter_structure_locale_validator']) ? $this->services['pim_connector.validator.constraints.filter_structure_locale_validator'] : $this->load(__DIR__.'/getPimConnector_Validator_Constraints_FilterStructureLocaleValidatorService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\ImmutableVariantAxesValuesValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.immutable_variant_axis_values']) ? $this->services['pim_catalog.validator.constraint.immutable_variant_axis_values'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ImmutableVariantAxisValuesService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\LocalizableValueValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.localizable_value']) ? $this->services['pim_catalog.validator.constraint.localizable_value'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_LocalizableValueService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\NotEmptyFamilyValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.not_empty_family']) ? $this->services['pim_catalog.validator.constraint.not_empty_family'] : $this->services['pim_catalog.validator.constraint.not_empty_family'] = new \Akeneo\Pim\Enrichment\Component\Product\Validator\Constraints\NotEmptyFamilyValidator()) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\NotEmptyVariantAxesValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.not_empty_variant_axes']) ? $this->services['pim_catalog.validator.constraint.not_empty_variant_axes'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_NotEmptyVariantAxesService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\OnlyExpectedAttributesValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.only_expected_attributes']) ? $this->services['pim_catalog.validator.constraint.only_expected_attributes'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_OnlyExpectedAttributesService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\ProductModelPositionInTheVariantTreeValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.has_a_root_product_model_as_parent']) ? $this->services['pim_catalog.validator.constraint.has_a_root_product_model_as_parent'] : $this->services['pim_catalog.validator.constraint.has_a_root_product_model_as_parent'] = new \Akeneo\Pim\Enrichment\Component\Product\Validator\Constraints\ProductModelPositionInTheVariantTreeValidator()) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\Product\\UniqueProductEntityValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.unique_product_entity']) ? $this->services['pim_catalog.validator.constraint.unique_product_entity'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_UniqueProductEntityService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\Product\\UniqueProductModelEntityValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.unique_product_model_entity']) ? $this->services['pim_catalog.validator.constraint.unique_product_model_entity'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_UniqueProductModelEntityService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\SameFamilyThanParentValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_same_family_than_parent']) ? $this->services['pim_catalog.validator.constraint.family_same_family_than_parent'] : $this->services['pim_catalog.validator.constraint.family_same_family_than_parent'] = new \Akeneo\Pim\Enrichment\Component\Product\Validator\Constraints\SameFamilyThanParentValidator()) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\ScopableValueValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.scopable_value']) ? $this->services['pim_catalog.validator.constraint.scopable_value'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ScopableValueService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\UniqueEntityValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.unique_product']) ? $this->services['pim_catalog.validator.constraint.unique_product'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_UniqueProductService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\UniqueValueValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.unique_value']) ? $this->services['pim_catalog.validator.constraint.unique_value'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_UniqueValueService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\UniqueVariantAxisValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.unique_variant_axes']) ? $this->services['pim_catalog.validator.constraint.unique_variant_axes'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_UniqueVariantAxesService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Validator\\Constraints\\VariantProductParentValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.invalid_variant_product_parent']) ? $this->services['pim_catalog.validator.constraint.invalid_variant_product_parent'] : $this->services['pim_catalog.validator.constraint.invalid_variant_product_parent'] = new \Akeneo\Pim\Enrichment\Component\Product\Validator\Constraints\VariantProductParentValidator()) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\AllowedExtensionsValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.image_allowed_extensions']) ? $this->services['pim_catalog.validator.constraint.image_allowed_extensions'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ImageAllowedExtensionsService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\AttributeTypeForOptionValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.attribute_type_for_option']) ? $this->services['pim_catalog.validator.constraint.attribute_type_for_option'] : $this->services['pim_catalog.validator.constraint.attribute_type_for_option'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\AttributeTypeForOptionValidator()) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\FamilyAttributeAsImageValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_attribute_as_image']) ? $this->services['pim_catalog.validator.constraint.family_attribute_as_image'] : $this->services['pim_catalog.validator.constraint.family_attribute_as_image'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\FamilyAttributeAsImageValidator(array(0 => 'pim_catalog_image', 1 => 'pim_assets_collection'))) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\FamilyAttributeAsLabelValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_attribute_as_label']) ? $this->services['pim_catalog.validator.constraint.family_attribute_as_label'] : $this->services['pim_catalog.validator.constraint.family_attribute_as_label'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\FamilyAttributeAsLabelValidator()) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\FamilyAttributeUsedAsAxisValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_attribute_used_as_axis']) ? $this->services['pim_catalog.validator.constraint.family_attribute_used_as_axis'] : $this->services['pim_catalog.validator.constraint.family_attribute_used_as_axis'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\FamilyAttributeUsedAsAxisValidator()) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\FamilyRequirementsValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_requirements']) ? $this->services['pim_catalog.validator.constraint.family_requirements'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_FamilyRequirementsService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\FamilyVariantValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_variant_axes']) ? $this->services['pim_catalog.validator.constraint.family_variant_axes'] : $this->services['pim_catalog.validator.constraint.family_variant_axes'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\FamilyVariantValidator()) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\ImmutableVariantAxesValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.immutable_family_variant_axes']) ? $this->services['pim_catalog.validator.constraint.immutable_family_variant_axes'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ImmutableFamilyVariantAxesService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\IsReferenceDataConfiguredValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.is_reference_data_configured']) ? $this->services['pim_catalog.validator.constraint.is_reference_data_configured'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_IsReferenceDataConfiguredService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\NotNullPropertiesValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.not_null_properties']) ? $this->services['pim_catalog.validator.constraint.not_null_properties'] : $this->services['pim_catalog.validator.constraint.not_null_properties'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\NotNullPropertiesValidator(array(0 => 'pim_reference_data_multiselect', 1 => 'pim_reference_data_simpleselect', 2 => 'pim_assets_collection'))) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\SingleIdentifierAttributeValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.single_identifier']) ? $this->services['pim_catalog.validator.constraint.single_identifier'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_SingleIdentifierService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Component\\Validator\\Constraints\\ValidMetricValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.valid_metric']) ? $this->services['pim_catalog.validator.constraint.valid_metric'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ValidMetricService.php')) && false ?: '_'};
}, 'Akeneo\\Tool\\Bundle\\BatchBundle\\Validator\\Constraints\\JobInstanceValidator' => function () {
    return ${($_ = isset($this->services['akeneo_batch.validator.job_instance']) ? $this->services['akeneo_batch.validator.job_instance'] : $this->load(__DIR__.'/getAkeneoBatch_Validator_JobInstanceService.php')) && false ?: '_'};
}, 'Akeneo\\Tool\\Component\\Localization\\Validator\\Constraints\\DateFormatValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.localization.validator.constraint.date_format']) ? $this->services['pim_catalog.localization.validator.constraint.date_format'] : $this->load(__DIR__.'/getPimCatalog_Localization_Validator_Constraint_DateFormatService.php')) && false ?: '_'};
}, 'Akeneo\\Tool\\Component\\Localization\\Validator\\Constraints\\NumberFormatValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.localization.validator.constraint.number_format']) ? $this->services['pim_catalog.localization.validator.constraint.number_format'] : $this->load(__DIR__.'/getPimCatalog_Localization_Validator_Constraint_NumberFormatService.php')) && false ?: '_'};
}, 'Akeneo\\Tool\\Component\\StorageUtils\\Validator\\Constraints\\ImmutableValidator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.immutable']) ? $this->services['pim_catalog.validator.constraint.immutable'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ImmutableService.php')) && false ?: '_'};
}, 'Akeneo\\UserManagement\\Bundle\\Validator\\Constraints\\ValueShouldNotContainsBlacklistedCharactersValidator' => function () {
    return ${($_ = isset($this->services['pim_user.validator.constraints.value_should_not_contains_blacklisted_characters']) ? $this->services['pim_user.validator.constraints.value_should_not_contains_blacklisted_characters'] : $this->services['pim_user.validator.constraints.value_should_not_contains_blacklisted_characters'] = new \Akeneo\UserManagement\Bundle\Validator\Constraints\ValueShouldNotContainsBlacklistedCharactersValidator()) && false ?: '_'};
}, 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator' => function () {
    return ${($_ = isset($this->services['doctrine.orm.validator.unique']) ? $this->services['doctrine.orm.validator.unique'] : $this->load(__DIR__.'/getDoctrine_Orm_Validator_UniqueService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator' => function () {
    return ${($_ = isset($this->services['security.validator.user_password']) ? $this->services['security.validator.user_password'] : $this->load(__DIR__.'/getSecurity_Validator_UserPasswordService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => function () {
    return ${($_ = isset($this->services['validator.email']) ? $this->services['validator.email'] : $this->services['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator(false)) && false ?: '_'};
}, 'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator' => function () {
    return ${($_ = isset($this->services['validator.expression']) ? $this->services['validator.expression'] : $this->services['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator()) && false ?: '_'};
}, 'akeneo_job_instance_validator' => function () {
    return ${($_ = isset($this->services['akeneo_batch.validator.job_instance']) ? $this->services['akeneo_batch.validator.job_instance'] : $this->load(__DIR__.'/getAkeneoBatch_Validator_JobInstanceService.php')) && false ?: '_'};
}, 'doctrine.orm.validator.unique' => function () {
    return ${($_ = isset($this->services['doctrine.orm.validator.unique']) ? $this->services['doctrine.orm.validator.unique'] : $this->load(__DIR__.'/getDoctrine_Orm_Validator_UniqueService.php')) && false ?: '_'};
}, 'filter_structure_attribute_validator' => function () {
    return ${($_ = isset($this->services['pim_connector.validator.constraints.filter_structure_attribute_validator']) ? $this->services['pim_connector.validator.constraints.filter_structure_attribute_validator'] : $this->load(__DIR__.'/getPimConnector_Validator_Constraints_FilterStructureAttributeValidatorService.php')) && false ?: '_'};
}, 'filter_structure_locale_validator' => function () {
    return ${($_ = isset($this->services['pim_connector.validator.constraints.filter_structure_locale_validator']) ? $this->services['pim_connector.validator.constraints.filter_structure_locale_validator'] : $this->load(__DIR__.'/getPimConnector_Validator_Constraints_FilterStructureLocaleValidatorService.php')) && false ?: '_'};
}, 'pim_activated_locale_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.activated_locale']) ? $this->services['pim_catalog.validator.constraint.activated_locale'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ActivatedLocaleService.php')) && false ?: '_'};
}, 'pim_at_least_a_channel' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraints.channel_validator']) ? $this->services['pim_catalog.validator.constraints.channel_validator'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraints_ChannelValidatorService.php')) && false ?: '_'};
}, 'pim_attribute_type_for_option_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.attribute_type_for_option']) ? $this->services['pim_catalog.validator.constraint.attribute_type_for_option'] : $this->services['pim_catalog.validator.constraint.attribute_type_for_option'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\AttributeTypeForOptionValidator()) && false ?: '_'};
}, 'pim_conversion_units_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraints.conversion_units']) ? $this->services['pim_catalog.validator.constraints.conversion_units'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraints_ConversionUnitsService.php')) && false ?: '_'};
}, 'pim_currency_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.currency']) ? $this->services['pim_catalog.validator.constraint.currency'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_CurrencyService.php')) && false ?: '_'};
}, 'pim_family_attribute_as_image_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_attribute_as_image']) ? $this->services['pim_catalog.validator.constraint.family_attribute_as_image'] : $this->services['pim_catalog.validator.constraint.family_attribute_as_image'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\FamilyAttributeAsImageValidator(array(0 => 'pim_catalog_image', 1 => 'pim_assets_collection'))) && false ?: '_'};
}, 'pim_family_attribute_as_label_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_attribute_as_label']) ? $this->services['pim_catalog.validator.constraint.family_attribute_as_label'] : $this->services['pim_catalog.validator.constraint.family_attribute_as_label'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\FamilyAttributeAsLabelValidator()) && false ?: '_'};
}, 'pim_family_attribute_used_as_axis' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_attribute_used_as_axis']) ? $this->services['pim_catalog.validator.constraint.family_attribute_used_as_axis'] : $this->services['pim_catalog.validator.constraint.family_attribute_used_as_axis'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\FamilyAttributeUsedAsAxisValidator()) && false ?: '_'};
}, 'pim_family_not_empty' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.not_empty_family']) ? $this->services['pim_catalog.validator.constraint.not_empty_family'] : $this->services['pim_catalog.validator.constraint.not_empty_family'] = new \Akeneo\Pim\Enrichment\Component\Product\Validator\Constraints\NotEmptyFamilyValidator()) && false ?: '_'};
}, 'pim_family_requirements_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_requirements']) ? $this->services['pim_catalog.validator.constraint.family_requirements'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_FamilyRequirementsService.php')) && false ?: '_'};
}, 'pim_family_same_family_than_parent' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_same_family_than_parent']) ? $this->services['pim_catalog.validator.constraint.family_same_family_than_parent'] : $this->services['pim_catalog.validator.constraint.family_same_family_than_parent'] = new \Akeneo\Pim\Enrichment\Component\Product\Validator\Constraints\SameFamilyThanParentValidator()) && false ?: '_'};
}, 'pim_family_variant' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.family_variant_axes']) ? $this->services['pim_catalog.validator.constraint.family_variant_axes'] : $this->services['pim_catalog.validator.constraint.family_variant_axes'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\FamilyVariantValidator()) && false ?: '_'};
}, 'pim_file_allowed_extensions_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.file_allowed_extensions']) ? $this->services['pim_catalog.validator.constraint.file_allowed_extensions'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_FileAllowedExtensionsService.php')) && false ?: '_'};
}, 'pim_has_a_root_product_model_as_parent' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.has_a_root_product_model_as_parent']) ? $this->services['pim_catalog.validator.constraint.has_a_root_product_model_as_parent'] : $this->services['pim_catalog.validator.constraint.has_a_root_product_model_as_parent'] = new \Akeneo\Pim\Enrichment\Component\Product\Validator\Constraints\ProductModelPositionInTheVariantTreeValidator()) && false ?: '_'};
}, 'pim_image_allowed_extensions_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.image_allowed_extensions']) ? $this->services['pim_catalog.validator.constraint.image_allowed_extensions'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ImageAllowedExtensionsService.php')) && false ?: '_'};
}, 'pim_immutable_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.immutable']) ? $this->services['pim_catalog.validator.constraint.immutable'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ImmutableService.php')) && false ?: '_'};
}, 'pim_immutable_variant_axes_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.immutable_family_variant_axes']) ? $this->services['pim_catalog.validator.constraint.immutable_family_variant_axes'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ImmutableFamilyVariantAxesService.php')) && false ?: '_'};
}, 'pim_immutable_variant_axis_values_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.immutable_variant_axis_values']) ? $this->services['pim_catalog.validator.constraint.immutable_variant_axis_values'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ImmutableVariantAxisValuesService.php')) && false ?: '_'};
}, 'pim_invalid_variant_product_parent' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.invalid_variant_product_parent']) ? $this->services['pim_catalog.validator.constraint.invalid_variant_product_parent'] : $this->services['pim_catalog.validator.constraint.invalid_variant_product_parent'] = new \Akeneo\Pim\Enrichment\Component\Product\Validator\Constraints\VariantProductParentValidator()) && false ?: '_'};
}, 'pim_is_currency_activated_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraints.is_currency_activated']) ? $this->services['pim_catalog.validator.constraints.is_currency_activated'] : $this->services['pim_catalog.validator.constraints.is_currency_activated'] = new \Akeneo\Channel\Component\Validator\Constraint\IsCurrencyActivatedValidator()) && false ?: '_'};
}, 'pim_is_reference_data_configured_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.is_reference_data_configured']) ? $this->services['pim_catalog.validator.constraint.is_reference_data_configured'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_IsReferenceDataConfiguredService.php')) && false ?: '_'};
}, 'pim_is_root_category_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraints.is_root_category']) ? $this->services['pim_catalog.validator.constraints.is_root_category'] : $this->services['pim_catalog.validator.constraints.is_root_category'] = new \Akeneo\Channel\Component\Validator\Constraint\IsRootCategoryValidator()) && false ?: '_'};
}, 'pim_locale_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraints.locale_validator']) ? $this->services['pim_catalog.validator.constraints.locale_validator'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraints_LocaleValidatorService.php')) && false ?: '_'};
}, 'pim_localizable_value_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.localizable_value']) ? $this->services['pim_catalog.validator.constraint.localizable_value'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_LocalizableValueService.php')) && false ?: '_'};
}, 'pim_localization_date_format' => function () {
    return ${($_ = isset($this->services['pim_catalog.localization.validator.constraint.date_format']) ? $this->services['pim_catalog.localization.validator.constraint.date_format'] : $this->load(__DIR__.'/getPimCatalog_Localization_Validator_Constraint_DateFormatService.php')) && false ?: '_'};
}, 'pim_localization_number_format' => function () {
    return ${($_ = isset($this->services['pim_catalog.localization.validator.constraint.number_format']) ? $this->services['pim_catalog.localization.validator.constraint.number_format'] : $this->load(__DIR__.'/getPimCatalog_Localization_Validator_Constraint_NumberFormatService.php')) && false ?: '_'};
}, 'pim_metric_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.valid_metric']) ? $this->services['pim_catalog.validator.constraint.valid_metric'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ValidMetricService.php')) && false ?: '_'};
}, 'pim_not_empty_axes_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.not_empty_variant_axes']) ? $this->services['pim_catalog.validator.constraint.not_empty_variant_axes'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_NotEmptyVariantAxesService.php')) && false ?: '_'};
}, 'pim_not_null_properties_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.not_null_properties']) ? $this->services['pim_catalog.validator.constraint.not_null_properties'] : $this->services['pim_catalog.validator.constraint.not_null_properties'] = new \Akeneo\Pim\Structure\Component\Validator\Constraints\NotNullPropertiesValidator(array(0 => 'pim_reference_data_multiselect', 1 => 'pim_reference_data_simpleselect', 2 => 'pim_assets_collection'))) && false ?: '_'};
}, 'pim_only_expected_attributes' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.only_expected_attributes']) ? $this->services['pim_catalog.validator.constraint.only_expected_attributes'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_OnlyExpectedAttributesService.php')) && false ?: '_'};
}, 'pim_scopable_value_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.scopable_value']) ? $this->services['pim_catalog.validator.constraint.scopable_value'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_ScopableValueService.php')) && false ?: '_'};
}, 'pim_single_identifier_attribute_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.single_identifier']) ? $this->services['pim_catalog.validator.constraint.single_identifier'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_SingleIdentifierService.php')) && false ?: '_'};
}, 'pim_unique_product_model_validator_entity' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.unique_product_model_entity']) ? $this->services['pim_catalog.validator.constraint.unique_product_model_entity'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_UniqueProductModelEntityService.php')) && false ?: '_'};
}, 'pim_unique_product_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.unique_product']) ? $this->services['pim_catalog.validator.constraint.unique_product'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_UniqueProductService.php')) && false ?: '_'};
}, 'pim_unique_product_validator_entity' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.unique_product_entity']) ? $this->services['pim_catalog.validator.constraint.unique_product_entity'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_UniqueProductEntityService.php')) && false ?: '_'};
}, 'pim_unique_value_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.unique_value']) ? $this->services['pim_catalog.validator.constraint.unique_value'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_UniqueValueService.php')) && false ?: '_'};
}, 'pim_unique_variant_axes_validator' => function () {
    return ${($_ = isset($this->services['pim_catalog.validator.constraint.unique_variant_axes']) ? $this->services['pim_catalog.validator.constraint.unique_variant_axes'] : $this->load(__DIR__.'/getPimCatalog_Validator_Constraint_UniqueVariantAxesService.php')) && false ?: '_'};
}, 'product_filter_data_validator' => function () {
    return ${($_ = isset($this->services['pim_connector.validator.constraints.product_filter_data_validator']) ? $this->services['pim_connector.validator.constraints.product_filter_data_validator'] : $this->load(__DIR__.'/getPimConnector_Validator_Constraints_ProductFilterDataValidatorService.php')) && false ?: '_'};
}, 'product_model_filter_data_validator' => function () {
    return ${($_ = isset($this->services['pim_connector.validator.constraints.product_model_filter_data_validator']) ? $this->services['pim_connector.validator.constraints.product_model_filter_data_validator'] : $this->load(__DIR__.'/getPimConnector_Validator_Constraints_ProductModelFilterDataValidatorService.php')) && false ?: '_'};
}, 'security.validator.user_password' => function () {
    return ${($_ = isset($this->services['security.validator.user_password']) ? $this->services['security.validator.user_password'] : $this->load(__DIR__.'/getSecurity_Validator_UserPasswordService.php')) && false ?: '_'};
}, 'validator.expression' => function () {
    return ${($_ = isset($this->services['validator.expression']) ? $this->services['validator.expression'] : $this->services['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator()) && false ?: '_'};
})));
