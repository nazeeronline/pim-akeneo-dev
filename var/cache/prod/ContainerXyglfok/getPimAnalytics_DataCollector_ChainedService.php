<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'pim_analytics.data_collector.chained' shared service.

$this->services['pim_analytics.data_collector.chained'] = $instance = new \Akeneo\Tool\Component\Analytics\ChainedDataCollector();

$a = ${($_ = isset($this->services['pim_analytics.data_collector.version']) ? $this->services['pim_analytics.data_collector.version'] : $this->load(__DIR__.'/getPimAnalytics_DataCollector_VersionService.php')) && false ?: '_'};
$b = ${($_ = isset($this->services['pim_analytics.data_collector.database']) ? $this->services['pim_analytics.data_collector.database'] : $this->load(__DIR__.'/getPimAnalytics_DataCollector_DatabaseService.php')) && false ?: '_'};
$c = ${($_ = isset($this->services['pim_analytics.data_collector.operating_system']) ? $this->services['pim_analytics.data_collector.operating_system'] : $this->services['pim_analytics.data_collector.operating_system'] = new \Akeneo\Platform\Bundle\AnalyticsBundle\DataCollector\OSDataCollector()) && false ?: '_'};

$instance->addCollector(${($_ = isset($this->services['pim_analytics.data_collector.request']) ? $this->services['pim_analytics.data_collector.request'] : $this->load(__DIR__.'/getPimAnalytics_DataCollector_RequestService.php')) && false ?: '_'}, 'update_checker');
$instance->addCollector(${($_ = isset($this->services['pim_analytics.data_collector.token_storage']) ? $this->services['pim_analytics.data_collector.token_storage'] : $this->load(__DIR__.'/getPimAnalytics_DataCollector_TokenStorageService.php')) && false ?: '_'}, 'update_checker');
$instance->addCollector($a, 'update_checker');
$instance->addCollector($a, 'system_info_report');
$instance->addCollector($b, 'update_checker');
$instance->addCollector($b, 'system_info_report');
$instance->addCollector(${($_ = isset($this->services['pim_analytics.data_collector.attribute']) ? $this->services['pim_analytics.data_collector.attribute'] : $this->load(__DIR__.'/getPimAnalytics_DataCollector_AttributeService.php')) && false ?: '_'}, 'system_info_report');
$instance->addCollector($c, 'update_checker');
$instance->addCollector($c, 'system_info_report');
$instance->addCollector(${($_ = isset($this->services['pim_analytics.data_collector.bundles']) ? $this->services['pim_analytics.data_collector.bundles'] : $this->load(__DIR__.'/getPimAnalytics_DataCollector_BundlesService.php')) && false ?: '_'}, 'system_info_report');
$instance->addCollector(${($_ = isset($this->services['pim_analytics.data_collector.storage']) ? $this->services['pim_analytics.data_collector.storage'] : $this->load(__DIR__.'/getPimAnalytics_DataCollector_StorageService.php')) && false ?: '_'}, 'system_info_report');

return $instance;
