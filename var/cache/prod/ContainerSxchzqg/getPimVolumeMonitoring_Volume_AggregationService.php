<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'pim_volume_monitoring.volume.aggregation' shared service.

return $this->services['pim_volume_monitoring.volume.aggregation'] = new \Akeneo\Platform\Component\CatalogVolumeMonitoring\Volume\Service\VolumeAggregation(${($_ = isset($this->services['pim_volume_monitoring.volume.repository.aggregated_volume']) ? $this->services['pim_volume_monitoring.volume.repository.aggregated_volume'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Volume_Repository_AggregatedVolumeService.php')) && false ?: '_'}, new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_products']) ? $this->services['pim_volume_monitoring.persistence.query.count_products'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountProductsService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_product_models']) ? $this->services['pim_volume_monitoring.persistence.query.count_product_models'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountProductModelsService.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_product_values']) ? $this->services['pim_volume_monitoring.persistence.query.count_product_values'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountProductValuesService.php')) && false ?: '_'};
    yield 3 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_product_model_values']) ? $this->services['pim_volume_monitoring.persistence.query.count_product_model_values'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountProductModelValuesService.php')) && false ?: '_'};
}, 4), new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.average_max_options_per_attribute']) ? $this->services['pim_volume_monitoring.persistence.query.average_max_options_per_attribute'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_AverageMaxOptionsPerAttributeService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.average_max_product_values']) ? $this->services['pim_volume_monitoring.persistence.query.average_max_product_values'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_AverageMaxProductValuesService.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.average_max_product_model_values']) ? $this->services['pim_volume_monitoring.persistence.query.average_max_product_model_values'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_AverageMaxProductModelValuesService.php')) && false ?: '_'};
}, 3));
