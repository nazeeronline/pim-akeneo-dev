<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'pim_volume_monitoring.volume.normalizer.volumes' shared service.

return $this->services['pim_volume_monitoring.volume.normalizer.volumes'] = new \Akeneo\Platform\Component\CatalogVolumeMonitoring\Volume\Normalizer\Volumes(${($_ = isset($this->services['pim_volume_monitoring.volume.normalizer.count_volume']) ? $this->services['pim_volume_monitoring.volume.normalizer.count_volume'] : $this->services['pim_volume_monitoring.volume.normalizer.count_volume'] = new \Akeneo\Platform\Component\CatalogVolumeMonitoring\Volume\Normalizer\CountVolumeNormalizer()) && false ?: '_'}, ${($_ = isset($this->services['pim_volume_monitoring.volume.normalizer.average_max_volumes']) ? $this->services['pim_volume_monitoring.volume.normalizer.average_max_volumes'] : $this->services['pim_volume_monitoring.volume.normalizer.average_max_volumes'] = new \Akeneo\Platform\Component\CatalogVolumeMonitoring\Volume\Normalizer\AverageMaxVolumesNormalizer()) && false ?: '_'}, new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_attributes']) ? $this->services['pim_volume_monitoring.persistence.query.count_attributes'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountAttributesService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_categories']) ? $this->services['pim_volume_monitoring.persistence.query.count_categories'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountCategoriesService.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_category_trees']) ? $this->services['pim_volume_monitoring.persistence.query.count_category_trees'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountCategoryTreesService.php')) && false ?: '_'};
    yield 3 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_channels']) ? $this->services['pim_volume_monitoring.persistence.query.count_channels'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountChannelsService.php')) && false ?: '_'};
    yield 4 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_families']) ? $this->services['pim_volume_monitoring.persistence.query.count_families'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountFamiliesService.php')) && false ?: '_'};
    yield 5 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_locales']) ? $this->services['pim_volume_monitoring.persistence.query.count_locales'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountLocalesService.php')) && false ?: '_'};
    yield 6 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_localizable_and_scopable_attributes']) ? $this->services['pim_volume_monitoring.persistence.query.count_localizable_and_scopable_attributes'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountLocalizableAndScopableAttributesService.php')) && false ?: '_'};
    yield 7 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_localizable_attributes']) ? $this->services['pim_volume_monitoring.persistence.query.count_localizable_attributes'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountLocalizableAttributesService.php')) && false ?: '_'};
    yield 8 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_scopable_attributes']) ? $this->services['pim_volume_monitoring.persistence.query.count_scopable_attributes'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountScopableAttributesService.php')) && false ?: '_'};
    yield 9 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_products']) ? $this->services['pim_volume_monitoring.persistence.query.count_products'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountProductsService.php')) && false ?: '_'};
    yield 10 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_product_models']) ? $this->services['pim_volume_monitoring.persistence.query.count_product_models'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountProductModelsService.php')) && false ?: '_'};
    yield 11 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.count_variant_products']) ? $this->services['pim_volume_monitoring.persistence.query.count_variant_products'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_CountVariantProductsService.php')) && false ?: '_'};
    yield 12 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.aggregated_count_product_and_product_model_values']) ? $this->services['pim_volume_monitoring.persistence.query.aggregated_count_product_and_product_model_values'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_AggregatedCountProductAndProductModelValuesService.php')) && false ?: '_'};
}, 13), new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.average_max_attributes_per_family']) ? $this->services['pim_volume_monitoring.persistence.query.average_max_attributes_per_family'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_AverageMaxAttributesPerFamilyService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.aggregated_average_max_options_per_attribute']) ? $this->services['pim_volume_monitoring.persistence.query.aggregated_average_max_options_per_attribute'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_AggregatedAverageMaxOptionsPerAttributeService.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['pim_volume_monitoring.persistence.query.aggregated_average_max_product_and_product_model_values']) ? $this->services['pim_volume_monitoring.persistence.query.aggregated_average_max_product_and_product_model_values'] : $this->load(__DIR__.'/getPimVolumeMonitoring_Persistence_Query_AggregatedAverageMaxProductAndProductModelValuesService.php')) && false ?: '_'};
}, 3));
