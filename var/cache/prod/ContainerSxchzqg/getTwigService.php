<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'twig' shared service.

$this->services['twig'] = $instance = new \Twig\Environment(${($_ = isset($this->services['twig.loader']) ? $this->services['twig.loader'] : $this->load(__DIR__.'/getTwig_LoaderService.php')) && false ?: '_'}, array('exception_controller' => 'FOS\\RestBundle\\Controller\\ExceptionController::showAction', 'form_themes' => array(0 => 'form_div_layout.html.twig', 1 => 'PimUIBundle:Form:pim-fields.html.twig'), 'debug' => false, 'strict_variables' => false, 'autoescape' => 'name', 'cache' => ($this->targetDirs[0].'/twig'), 'charset' => 'UTF-8', 'default_path' => ($this->targetDirs[3].'/templates'), 'paths' => array(), 'date' => array('format' => 'F j, Y H:i', 'interval_format' => '%d days', 'timezone' => NULL), 'number_format' => array('decimals' => 0, 'decimal_point' => '.', 'thousands_separator' => ',')));

$a = ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack()) && false ?: '_'};
$b = ${($_ = isset($this->services['knp_menu.matcher']) ? $this->services['knp_menu.matcher'] : $this->load(__DIR__.'/getKnpMenu_MatcherService.php')) && false ?: '_'};

$c = new \Knp\Menu\Util\MenuManipulator();

$d = new \Symfony\Bridge\Twig\AppVariable();
$d->setEnvironment('prod');
$d->setDebug(false);
if ($this->has('security.token_storage')) {
    $d->setTokenStorage(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage()) && false ?: '_'});
}
if ($this->has('request_stack')) {
    $d->setRequestStack($a);
}

$instance->addExtension(${($_ = isset($this->services['twig.extension.intl']) ? $this->services['twig.extension.intl'] : $this->services['twig.extension.intl'] = new \Twig_Extensions_Extension_Intl()) && false ?: '_'});
$instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
$instance->addExtension(new \Symfony\Bundle\AsseticBundle\Twig\AsseticExtension(${($_ = isset($this->services['assetic.asset_factory']) ? $this->services['assetic.asset_factory'] : $this->load(__DIR__.'/getAssetic_AssetFactoryService.php')) && false ?: '_'}, ${($_ = isset($this->services['templating.name_parser']) ? $this->services['templating.name_parser'] : $this->services['templating.name_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'})) && false ?: '_'}, false, array(), $this->parameters['assetic.bundles'], new \Symfony\Bundle\AsseticBundle\DefaultValueSupplier($this)));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension(${($_ = isset($this->services['security.logout_url_generator']) ? $this->services['security.logout_url_generator'] : $this->getSecurity_LogoutUrlGeneratorService()) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension(${($_ = isset($this->services['security.authorization_checker']) ? $this->services['security.authorization_checker'] : $this->getSecurity_AuthorizationCheckerService()) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension(${($_ = isset($this->services['translator.default']) ? $this->services['translator.default'] : $this->getTranslator_DefaultService()) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\AssetExtension(${($_ = isset($this->services['assets.packages']) ? $this->services['assets.packages'] : $this->load(__DIR__.'/getAssets_PackagesService.php')) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension(${($_ = isset($this->services['debug.file_link_formatter']) ? $this->services['debug.file_link_formatter'] : $this->services['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL)) && false ?: '_'}, ($this->targetDirs[3].'/app'), 'UTF-8'));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\RoutingExtension(${($_ = isset($this->services['router']) ? $this->services['router'] : $this->getRouterService()) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension(${($_ = isset($this->services['debug.stopwatch']) ? $this->services['debug.stopwatch'] : $this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true)) && false ?: '_'}, false));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension());
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension($a, ${($_ = isset($this->services['router.request_context']) ? $this->services['router.request_context'] : $this->getRouter_RequestContextService()) && false ?: '_'}));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension(array(0 => $this, 1 => 'twig.form.renderer')));
$instance->addExtension(new \Symfony\Bridge\Twig\Extension\WebLinkExtension($a));
$instance->addExtension(new \JMS\Serializer\Twig\SerializerRuntimeExtension());
$instance->addExtension(new \Knp\Menu\Twig\MenuExtension(new \Knp\Menu\Twig\Helper(${($_ = isset($this->services['knp_menu.renderer_provider']) ? $this->services['knp_menu.renderer_provider'] : $this->services['knp_menu.renderer_provider'] = new \Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider($this, 'twig', array('list' => 'knp_menu.renderer.list', 'twig' => 'knp_menu.renderer.twig'))) && false ?: '_'}, ${($_ = isset($this->services['knp_menu.menu_provider']) ? $this->services['knp_menu.menu_provider'] : $this->load(__DIR__.'/getKnpMenu_MenuProviderService.php')) && false ?: '_'}, $c, $b), $b, $c));
$instance->addExtension(new \Liip\ImagineBundle\Templating\ImagineExtension(${($_ = isset($this->services['liip_imagine.cache.manager']) ? $this->services['liip_imagine.cache.manager'] : $this->load(__DIR__.'/getLiipImagine_Cache_ManagerService.php')) && false ?: '_'}));
$instance->addExtension(${($_ = isset($this->services['oro_assetic.twig.extension']) ? $this->services['oro_assetic.twig.extension'] : $this->load(__DIR__.'/getOroAssetic_Twig_ExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['oro_config.twig.config_extension']) ? $this->services['oro_config.twig.config_extension'] : $this->load(__DIR__.'/getOroConfig_Twig_ConfigExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['oro_datagrid.twig.metadata']) ? $this->services['oro_datagrid.twig.metadata'] : $this->load(__DIR__.'/getOroDatagrid_Twig_MetadataService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['oro_filter.twig.extension.render_layout']) ? $this->services['oro_filter.twig.extension.render_layout'] : $this->services['oro_filter.twig.extension.render_layout'] = new \Oro\Bundle\FilterBundle\Twig\RenderLayoutExtension('PimFilterBundle:Filter:pim-layout.js.twig')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['oro_filter.twig.extension.render_header']) ? $this->services['oro_filter.twig.extension.render_header'] : $this->services['oro_filter.twig.extension.render_header'] = new \Oro\Bundle\FilterBundle\Twig\RenderHeaderExtension('OroFilterBundle:Filter:header.html.twig')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['oro_security.twig.security_extension']) ? $this->services['oro_security.twig.security_extension'] : $this->load(__DIR__.'/getOroSecurity_Twig_SecurityExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_datagrid.twig.filter_extension']) ? $this->services['pim_datagrid.twig.filter_extension'] : $this->services['pim_datagrid.twig.filter_extension'] = new \Oro\Bundle\PimDataGridBundle\Twig\FilterExtension($this)) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_user.twig.acl_groups_extension']) ? $this->services['pim_user.twig.acl_groups_extension'] : $this->load(__DIR__.'/getPimUser_Twig_AclGroupsExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_enrich.twig.locale_extension']) ? $this->services['pim_enrich.twig.locale_extension'] : $this->load(__DIR__.'/getPimEnrich_Twig_LocaleExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_enrich.twig.category_extension']) ? $this->services['pim_enrich.twig.category_extension'] : $this->load(__DIR__.'/getPimEnrich_Twig_CategoryExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_enrich.twig.attribute_extension']) ? $this->services['pim_enrich.twig.attribute_extension'] : $this->load(__DIR__.'/getPimEnrich_Twig_AttributeExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_analytics.twig.update_extension']) ? $this->services['pim_analytics.twig.update_extension'] : $this->load(__DIR__.'/getPimAnalytics_Twig_UpdateExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_notification.twig.notification_extension']) ? $this->services['pim_notification.twig.notification_extension'] : $this->load(__DIR__.'/getPimNotification_Twig_NotificationExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_ui.twig.ui_extension']) ? $this->services['pim_ui.twig.ui_extension'] : $this->load(__DIR__.'/getPimUi_Twig_UiExtensionService.php')) && false ?: '_'});
$instance->addExtension(new \Akeneo\Platform\Bundle\UIBundle\Twig\StyleExtension());
$instance->addExtension(${($_ = isset($this->services['pim_ui.twig.ceil_extension']) ? $this->services['pim_ui.twig.ceil_extension'] : $this->services['pim_ui.twig.ceil_extension'] = new \Akeneo\Platform\Bundle\UIBundle\Twig\CeilExtension()) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_ui.twig.md5_extension']) ? $this->services['pim_ui.twig.md5_extension'] : $this->load(__DIR__.'/getPimUi_Twig_Md5ExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_ui.twig.date_extension']) ? $this->services['pim_ui.twig.date_extension'] : $this->load(__DIR__.'/getPimUi_Twig_DateExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_localization.twig.locale_extension']) ? $this->services['pim_localization.twig.locale_extension'] : $this->services['pim_localization.twig.locale_extension'] = new \Akeneo\Platform\Bundle\UIBundle\Twig\LocaleExtension()) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_localization.twig.attribute_extension']) ? $this->services['pim_localization.twig.attribute_extension'] : $this->load(__DIR__.'/getPimLocalization_Twig_AttributeExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_enrich.twig.version_extension']) ? $this->services['pim_enrich.twig.version_extension'] : $this->load(__DIR__.'/getPimEnrich_Twig_VersionExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_enrich.twig.view_element_extension']) ? $this->services['pim_enrich.twig.view_element_extension'] : $this->load(__DIR__.'/getPimEnrich_Twig_ViewElementExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_enrich.twig.translations_extension']) ? $this->services['pim_enrich.twig.translations_extension'] : $this->load(__DIR__.'/getPimEnrich_Twig_TranslationsExtensionService.php')) && false ?: '_'});
$instance->addExtension(${($_ = isset($this->services['pim_enrich.twig.object_class_extension']) ? $this->services['pim_enrich.twig.object_class_extension'] : $this->services['pim_enrich.twig.object_class_extension'] = new \Akeneo\Platform\Bundle\UIBundle\Twig\ObjectClassExtension()) && false ?: '_'});
$instance->addGlobal('app', $d);
$instance->addRuntimeLoader(new \Twig\RuntimeLoader\ContainerRuntimeLoader(new \Symfony\Component\DependencyInjection\ServiceLocator(array('JMS\\Serializer\\Twig\\SerializerRuntimeHelper' => function () {
    return ${($_ = isset($this->services['jms_serializer.twig_extension.serializer_runtime_helper']) ? $this->services['jms_serializer.twig_extension.serializer_runtime_helper'] : $this->load(__DIR__.'/getJmsSerializer_TwigExtension_SerializerRuntimeHelperService.php')) && false ?: '_'};
}, 'Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime' => function () {
    return ${($_ = isset($this->services['twig.runtime.httpkernel']) ? $this->services['twig.runtime.httpkernel'] : $this->load(__DIR__.'/getTwig_Runtime_HttpkernelService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\FormRenderer' => function () {
    return ${($_ = isset($this->services['twig.form.renderer']) ? $this->services['twig.form.renderer'] : $this->load(__DIR__.'/getTwig_Form_RendererService.php')) && false ?: '_'};
}))));
$instance->addGlobal('ws', array('port' => 8080, 'host' => '127.0.0.1'));
$instance->addGlobal('uservoice_key', NULL);
(new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', NULL, 0, '.', ','))->configure($instance);

return $instance;
