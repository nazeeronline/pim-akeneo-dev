<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'routing.loader' shared service.

$a = ${($_ = isset($this->services['annotation_reader']) ? $this->services['annotation_reader'] : $this->getAnnotationReaderService()) && false ?: '_'};
$b = ${($_ = isset($this->services['file_locator']) ? $this->services['file_locator'] : $this->services['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'}, ($this->targetDirs[3].'/app/Resources'), array(0 => ($this->targetDirs[3].'/app')))) && false ?: '_'};
$c = ${($_ = isset($this->services['controller_name_converter']) ? $this->services['controller_name_converter'] : $this->services['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(${($_ = isset($this->services['kernel']) ? $this->services['kernel'] : $this->get('kernel')) && false ?: '_'})) && false ?: '_'};

$d = new \Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader($a);

$e = new \FOS\RestBundle\Routing\Loader\RestRouteProcessor();

$f = new \Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader($a);

$g = new \Symfony\Component\Config\Loader\LoaderResolver();
$g->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($b, $d));
$g->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($b, $d));
$g->addLoader($d);
$g->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($b));
$g->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($b));
$g->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($b));
$g->addLoader(new \Symfony\Component\Config\Loader\GlobFileLoader($b));
$g->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($b));
$g->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
$g->addLoader(new \FOS\RestBundle\Routing\Loader\DirectoryRouteLoader($b, $e));
$g->addLoader(new \FOS\RestBundle\Routing\Loader\RestRouteLoader($this, $b, $c, new \FOS\RestBundle\Routing\Loader\Reader\RestControllerReader(new \FOS\RestBundle\Routing\Loader\Reader\RestActionReader($a, ${($_ = isset($this->services['fos_rest.request.param_fetcher.reader']) ? $this->services['fos_rest.request.param_fetcher.reader'] : $this->load(__DIR__.'/getFosRest_Request_ParamFetcher_ReaderService.php')) && false ?: '_'}, ${($_ = isset($this->services['fos_rest.inflector']) ? $this->services['fos_rest.inflector'] : $this->services['fos_rest.inflector'] = new \FOS\RestBundle\Inflector\DoctrineInflector()) && false ?: '_'}, true, array('json' => false, 'html' => true)), $a), 'json'));
$g->addLoader(new \FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader($b, $e, true, array('json' => false, 'html' => true), 'json'));
$g->addLoader(new \FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader($b, $e, true, array('json' => false, 'html' => true), 'json'));
$g->addLoader($f);
$g->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($b, $f));
$g->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($b, $f));

return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($c, $g);
