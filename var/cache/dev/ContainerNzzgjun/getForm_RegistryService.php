<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'form.registry' shared service.

return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry(array(0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\ServiceLocator(array('Akeneo\\Tool\\Bundle\\FileStorageBundle\\Form\\Type\\FileInfoType' => function () {
    return ${($_ = isset($this->services['akeneo_file_storage.form.type.file_info']) ? $this->services['akeneo_file_storage.form.type.file_info'] : $this->services['akeneo_file_storage.form.type.file_info'] = new \Akeneo\Tool\Bundle\FileStorageBundle\Form\Type\FileInfoType('Akeneo\\Tool\\Component\\FileStorage\\Model\\FileInfo')) && false ?: '_'};
}, 'Liip\\ImagineBundle\\Form\\Type\\ImageType' => function () {
    return ${($_ = isset($this->services['liip_imagine.form.type.image']) ? $this->services['liip_imagine.form.type.image'] : $this->services['liip_imagine.form.type.image'] = new \Liip\ImagineBundle\Form\Type\ImageType()) && false ?: '_'};
}, 'Oro\\Bundle\\SecurityBundle\\Form\\Type\\ObjectLabelType' => function () {
    return ${($_ = isset($this->services['oro_security.form.type.object_label_type']) ? $this->services['oro_security.form.type.object_label_type'] : $this->services['oro_security.form.type.object_label_type'] = new \Oro\Bundle\SecurityBundle\Form\Type\ObjectLabelType()) && false ?: '_'};
}, 'Oro\\Bundle\\PimDataGridBundle\\Form\\Type\\DatagridFilterChoiceType' => function () {
    return ${($_ = isset($this->services['pim_datagrid.form.type.datagrid_product_filter_choice']) ? $this->services['pim_datagrid.form.type.datagrid_product_filter_choice'] : $this->load(__DIR__.'/getPimDatagrid_Form_Type_DatagridProductFilterChoiceService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\PimDataGridBundle\\Form\\Type\\DatagridViewType' => function () {
    return ${($_ = isset($this->services['pim_datagrid.form.type.datagrid_view']) ? $this->services['pim_datagrid.form.type.datagrid_view'] : $this->services['pim_datagrid.form.type.datagrid_view'] = new \Oro\Bundle\PimDataGridBundle\Form\Type\DatagridViewType('Oro\\Bundle\\PimDataGridBundle\\Entity\\DatagridView')) && false ?: '_'};
}, 'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\CategoryType' => function () {
    return ${($_ = isset($this->services['pim_filter.form.type.category']) ? $this->services['pim_filter.form.type.category'] : $this->services['pim_filter.form.type.category'] = new \Oro\Bundle\PimFilterBundle\Form\Type\CategoryType()) && false ?: '_'};
}, 'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\DateRangeType' => function () {
    return ${($_ = isset($this->services['pim_filter.form.type.date_range']) ? $this->services['pim_filter.form.type.date_range'] : $this->services['pim_filter.form.type.date_range'] = new \Oro\Bundle\PimFilterBundle\Form\Type\DateRangeType()) && false ?: '_'};
}, 'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\DateTimeRangeType' => function () {
    return ${($_ = isset($this->services['pim_filter.form.type.datetime_range']) ? $this->services['pim_filter.form.type.datetime_range'] : $this->services['pim_filter.form.type.datetime_range'] = new \Oro\Bundle\PimFilterBundle\Form\Type\DateTimeRangeType()) && false ?: '_'};
}, 'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\AjaxChoiceFilterType' => function () {
    return ${($_ = isset($this->services['pim_filter.form.type.filter.ajax_choice']) ? $this->services['pim_filter.form.type.filter.ajax_choice'] : $this->load(__DIR__.'/getPimFilter_Form_Type_Filter_AjaxChoiceService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\BooleanFilterType' => function () {
    return ${($_ = isset($this->services['pim_filter.form.type.boolean']) ? $this->services['pim_filter.form.type.boolean'] : $this->load(__DIR__.'/getPimFilter_Form_Type_BooleanService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\CategoryFilterType' => function () {
    return ${($_ = isset($this->services['pim_filter.form.type.filter.category']) ? $this->services['pim_filter.form.type.filter.category'] : $this->load(__DIR__.'/getPimFilter_Form_Type_Filter_CategoryService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\MetricFilterType' => function () {
    return ${($_ = isset($this->services['pim_filter.form.type.filter.metric']) ? $this->services['pim_filter.form.type.filter.metric'] : $this->services['pim_filter.form.type.filter.metric'] = new \Oro\Bundle\PimFilterBundle\Form\Type\Filter\MetricFilterType()) && false ?: '_'};
}, 'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\PriceFilterType' => function () {
    return ${($_ = isset($this->services['pim_filter.form.type.filter.price']) ? $this->services['pim_filter.form.type.filter.price'] : $this->load(__DIR__.'/getPimFilter_Form_Type_Filter_PriceService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\PimFilterBundle\\Form\\Type\\Filter\\ScopeFilterType' => function () {
    return ${($_ = isset($this->services['pim_filter.form.type.filter.scope']) ? $this->services['pim_filter.form.type.filter.scope'] : $this->load(__DIR__.'/getPimFilter_Form_Type_Filter_ScopeService.php')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\ImportExportBundle\\Form\\Type\\JobInstanceFormType' => function () {
    return ${($_ = isset($this->services['pim_import_export.form.type.job_instance']) ? $this->services['pim_import_export.form.type.job_instance'] : $this->load(__DIR__.'/getPimImportExport_Form_Type_JobInstanceService.php')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\AjaxEntityType' => function () {
    return ${($_ = isset($this->services['pim_ui.form.type.ajax_entity']) ? $this->services['pim_ui.form.type.ajax_entity'] : $this->load(__DIR__.'/getPimUi_Form_Type_AjaxEntityService.php')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\AjaxReferenceDataType' => function () {
    return ${($_ = isset($this->services['pim_ui.form.type.ajax_reference_data']) ? $this->services['pim_ui.form.type.ajax_reference_data'] : $this->load(__DIR__.'/getPimUi_Form_Type_AjaxReferenceDataService.php')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\DateType' => function () {
    return ${($_ = isset($this->services['pim_ui.form.type.date']) ? $this->services['pim_ui.form.type.date'] : $this->load(__DIR__.'/getPimUi_Form_Type_DateService.php')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\NumberType' => function () {
    return ${($_ = isset($this->services['pim_ui.form.type.number']) ? $this->services['pim_ui.form.type.number'] : $this->load(__DIR__.'/getPimUi_Form_Type_NumberService.php')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\SwitchType' => function () {
    return ${($_ = isset($this->services['pim_ui.form.type.switch']) ? $this->services['pim_ui.form.type.switch'] : $this->services['pim_ui.form.type.switch'] = new \Akeneo\Platform\Bundle\UIBundle\Form\Type\SwitchType()) && false ?: '_'};
}, 'Akeneo\\UserManagement\\Bundle\\Form\\Type\\AclAccessLevelSelectorType' => function () {
    return ${($_ = isset($this->services['pim_user.form.type.acl_access_level_selector']) ? $this->services['pim_user.form.type.acl_access_level_selector'] : $this->services['pim_user.form.type.acl_access_level_selector'] = new \Akeneo\UserManagement\Bundle\Form\Type\AclAccessLevelSelectorType()) && false ?: '_'};
}, 'Akeneo\\UserManagement\\Bundle\\Form\\Type\\PrivilegeCollectionType' => function () {
    return ${($_ = isset($this->services['pim_user.form.type.acl_collection']) ? $this->services['pim_user.form.type.acl_collection'] : $this->services['pim_user.form.type.acl_collection'] = new \Akeneo\UserManagement\Bundle\Form\Type\PrivilegeCollectionType()) && false ?: '_'};
}, 'Akeneo\\UserManagement\\Bundle\\Form\\Type\\AclRoleType' => function () {
    return ${($_ = isset($this->services['pim_user.form.type.acl_role']) ? $this->services['pim_user.form.type.acl_role'] : $this->services['pim_user.form.type.acl_role'] = new \Akeneo\UserManagement\Bundle\Form\Type\AclRoleType(array())) && false ?: '_'};
}, 'Akeneo\\UserManagement\\Bundle\\Form\\Type\\GroupApiType' => function () {
    return ${($_ = isset($this->services['pim_user.form.type.group.api']) ? $this->services['pim_user.form.type.group.api'] : $this->services['pim_user.form.type.group.api'] = new \Akeneo\UserManagement\Bundle\Form\Type\GroupApiType()) && false ?: '_'};
}, 'Akeneo\\UserManagement\\Bundle\\Form\\Type\\GroupType' => function () {
    return ${($_ = isset($this->services['pim_user.form.type.group']) ? $this->services['pim_user.form.type.group'] : $this->services['pim_user.form.type.group'] = new \Akeneo\UserManagement\Bundle\Form\Type\GroupType()) && false ?: '_'};
}, 'Akeneo\\UserManagement\\Bundle\\Form\\Type\\ResetType' => function () {
    return ${($_ = isset($this->services['pim_user.form.type.reset']) ? $this->services['pim_user.form.type.reset'] : $this->services['pim_user.form.type.reset'] = new \Akeneo\UserManagement\Bundle\Form\Type\ResetType('Akeneo\\UserManagement\\Component\\Model\\User')) && false ?: '_'};
}, 'Akeneo\\UserManagement\\Bundle\\Form\\Type\\RoleApiType' => function () {
    return ${($_ = isset($this->services['pim_user.form.type.role.api']) ? $this->services['pim_user.form.type.role.api'] : $this->services['pim_user.form.type.role.api'] = new \Akeneo\UserManagement\Bundle\Form\Type\RoleApiType()) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Bundle\\Form\\Type\\CategoryType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.category']) ? $this->services['pim_enrich.form.type.category'] : $this->services['pim_enrich.form.type.category'] = new \Akeneo\Pim\Enrichment\Bundle\Form\Type\CategoryType('Akeneo\\Pim\\Enrichment\\Component\\Category\\Model\\Category', 'Akeneo\\Pim\\Enrichment\\Component\\Category\\Model\\CategoryTranslation')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Bundle\\Form\\Type\\CommentType' => function () {
    return ${($_ = isset($this->services['pim_comment.form.type.comment']) ? $this->services['pim_comment.form.type.comment'] : $this->load(__DIR__.'/getPimComment_Form_Type_CommentService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Enrichment\\Bundle\\Form\\Type\\GroupType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.group']) ? $this->services['pim_enrich.form.type.group'] : $this->services['pim_enrich.form.type.group'] = new \Akeneo\Pim\Enrichment\Bundle\Form\Type\GroupType('Akeneo\\Pim\\Structure\\Component\\Model\\Attribute', 'Akeneo\\Pim\\Enrichment\\Component\\Product\\Model\\Group')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\AssociationTypeType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.association_type']) ? $this->services['pim_enrich.form.type.association_type'] : $this->services['pim_enrich.form.type.association_type'] = new \Akeneo\Pim\Structure\Bundle\Form\Type\AssociationTypeType('Akeneo\\Pim\\Structure\\Component\\Model\\AssociationType')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\AttributeOptionCreateType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.attribute_option_create']) ? $this->services['pim_enrich.form.type.attribute_option_create'] : $this->services['pim_enrich.form.type.attribute_option_create'] = new \Akeneo\Pim\Structure\Bundle\Form\Type\AttributeOptionCreateType('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeOption')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\AttributeOptionType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.attribute_option']) ? $this->services['pim_enrich.form.type.attribute_option'] : $this->services['pim_enrich.form.type.attribute_option'] = new \Akeneo\Pim\Structure\Bundle\Form\Type\AttributeOptionType('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeOption')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\AttributeOptionValueType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.attribute_option_value']) ? $this->services['pim_enrich.form.type.attribute_option_value'] : $this->services['pim_enrich.form.type.attribute_option_value'] = new \Akeneo\Pim\Structure\Bundle\Form\Type\AttributeOptionValueType('Akeneo\\Pim\\Structure\\Component\\Model\\AttributeOptionValue')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\AvailableAttributesType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.available_attributes']) ? $this->services['pim_enrich.form.type.available_attributes'] : $this->load(__DIR__.'/getPimEnrich_Form_Type_AvailableAttributesService.php')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\FamilyType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.family']) ? $this->services['pim_enrich.form.type.family'] : $this->services['pim_enrich.form.type.family'] = new \Akeneo\Pim\Structure\Bundle\Form\Type\FamilyType('Akeneo\\Pim\\Structure\\Component\\Model\\Family')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\GroupTypeType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.group_type']) ? $this->services['pim_enrich.form.type.group_type'] : $this->services['pim_enrich.form.type.group_type'] = new \Akeneo\Pim\Structure\Bundle\Form\Type\GroupTypeType('Akeneo\\Pim\\Structure\\Component\\Model\\GroupType')) && false ?: '_'};
}, 'Akeneo\\Pim\\Structure\\Bundle\\Form\\Type\\SelectFamilyType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.export_select_family']) ? $this->services['pim_enrich.form.type.export_select_family'] : $this->load(__DIR__.'/getPimEnrich_Form_Type_ExportSelectFamilyService.php')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\AsyncSelectType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.async_select']) ? $this->services['pim_enrich.form.type.async_select'] : $this->load(__DIR__.'/getPimEnrich_Form_Type_AsyncSelectService.php')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\EntityIdentifierType' => function () {
    return ${($_ = isset($this->services['pim_enrich.type.entity_identifier']) ? $this->services['pim_enrich.type.entity_identifier'] : $this->load(__DIR__.'/getPimEnrich_Type_EntityIdentifierService.php')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\LightEntityType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.light_entity']) ? $this->services['pim_enrich.form.type.light_entity'] : $this->services['pim_enrich.form.type.light_entity'] = new \Akeneo\Platform\Bundle\UIBundle\Form\Type\LightEntityType()) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\LocaleType' => function () {
    return ${($_ = isset($this->services['pim_localization.form.type.locale']) ? $this->services['pim_localization.form.type.locale'] : $this->load(__DIR__.'/getPimLocalization_Form_Type_LocaleService.php')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\LocalizedCollectionType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.localized_collection']) ? $this->services['pim_enrich.form.type.localized_collection'] : $this->services['pim_enrich.form.type.localized_collection'] = new \Akeneo\Platform\Bundle\UIBundle\Form\Type\LocalizedCollectionType()) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\MediaType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.media']) ? $this->services['pim_enrich.form.type.media'] : $this->services['pim_enrich.form.type.media'] = new \Akeneo\Platform\Bundle\UIBundle\Form\Type\MediaType('Akeneo\\Tool\\Component\\FileStorage\\Model\\FileInfo')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\ObjectIdentifierType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.object_identifier']) ? $this->services['pim_enrich.form.type.object_identifier'] : $this->services['pim_enrich.form.type.object_identifier'] = new \Akeneo\Platform\Bundle\UIBundle\Form\Type\ObjectIdentifierType()) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\ProductGridFilterChoiceType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.product_grid_filter_choice']) ? $this->services['pim_enrich.form.type.product_grid_filter_choice'] : $this->load(__DIR__.'/getPimEnrich_Form_Type_ProductGridFilterChoiceService.php')) && false ?: '_'};
}, 'Akeneo\\Platform\\Bundle\\UIBundle\\Form\\Type\\TranslatableFieldType' => function () {
    return ${($_ = isset($this->services['pim_enrich.form.type.translatable_field']) ? $this->services['pim_enrich.form.type.translatable_field'] : $this->load(__DIR__.'/getPimEnrich_Form_Type_TranslatableFieldService.php')) && false ?: '_'};
}, 'FOS\\OAuthServerBundle\\Form\\Type\\AuthorizeFormType' => function () {
    return ${($_ = isset($this->services['fos_oauth_server.authorize.form.type']) ? $this->services['fos_oauth_server.authorize.form.type'] : $this->services['fos_oauth_server.authorize.form.type'] = new \FOS\OAuthServerBundle\Form\Type\AuthorizeFormType()) && false ?: '_'};
}, 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\BooleanFilterType' => function () {
    return ${($_ = isset($this->services['oro_filter.form.type.filter.boolean']) ? $this->services['oro_filter.form.type.filter.boolean'] : $this->load(__DIR__.'/getOroFilter_Form_Type_Filter_BooleanService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\ChoiceFilterType' => function () {
    return ${($_ = isset($this->services['oro_filter.form.type.filter.choice']) ? $this->services['oro_filter.form.type.filter.choice'] : $this->load(__DIR__.'/getOroFilter_Form_Type_Filter_ChoiceService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\DateRangeFilterType' => function () {
    return ${($_ = isset($this->services['oro_filter.form.type.filter.date_range']) ? $this->services['oro_filter.form.type.filter.date_range'] : $this->load(__DIR__.'/getOroFilter_Form_Type_Filter_DateRangeService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\DateTimeRangeFilterType' => function () {
    return ${($_ = isset($this->services['oro_filter.form.type.filter.datetime_range']) ? $this->services['oro_filter.form.type.filter.datetime_range'] : $this->load(__DIR__.'/getOroFilter_Form_Type_Filter_DatetimeRangeService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\EntityFilterType' => function () {
    return ${($_ = isset($this->services['oro_filter.form.type.filter.entity']) ? $this->services['oro_filter.form.type.filter.entity'] : $this->load(__DIR__.'/getOroFilter_Form_Type_Filter_EntityService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\FilterType' => function () {
    return ${($_ = isset($this->services['oro_filter.form.type.filter']) ? $this->services['oro_filter.form.type.filter'] : $this->load(__DIR__.'/getOroFilter_Form_Type_FilterService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\NumberFilterType' => function () {
    return ${($_ = isset($this->services['oro_filter.form.type.filter.number']) ? $this->services['oro_filter.form.type.filter.number'] : $this->load(__DIR__.'/getOroFilter_Form_Type_Filter_NumberService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\SelectRowFilterType' => function () {
    return ${($_ = isset($this->services['oro_filter.form.type.filter.selectrow']) ? $this->services['oro_filter.form.type.filter.selectrow'] : $this->load(__DIR__.'/getOroFilter_Form_Type_Filter_SelectrowService.php')) && false ?: '_'};
}, 'Oro\\Bundle\\FilterBundle\\Form\\Type\\Filter\\TextFilterType' => function () {
    return ${($_ = isset($this->services['oro_filter.form.type.filter.text']) ? $this->services['oro_filter.form.type.filter.text'] : $this->load(__DIR__.'/getOroFilter_Form_Type_Filter_TextService.php')) && false ?: '_'};
}, 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => function () {
    return ${($_ = isset($this->services['form.type.entity']) ? $this->services['form.type.entity'] : $this->load(__DIR__.'/getForm_Type_EntityService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => function () {
    return ${($_ = isset($this->services['form.type.choice']) ? $this->services['form.type.choice'] : $this->load(__DIR__.'/getForm_Type_ChoiceService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => function () {
    return ${($_ = isset($this->services['form.type.form']) ? $this->services['form.type.form'] : $this->load(__DIR__.'/getForm_Type_FormService.php')) && false ?: '_'};
})), array('Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.form.http_foundation']) ? $this->services['form.type_extension.form.http_foundation'] : $this->load(__DIR__.'/getForm_TypeExtension_Form_HttpFoundationService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['form.type_extension.form.validator']) ? $this->services['form.type_extension.form.validator'] : $this->load(__DIR__.'/getForm_TypeExtension_Form_ValidatorService.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['form.type_extension.upload.validator']) ? $this->services['form.type_extension.upload.validator'] : $this->load(__DIR__.'/getForm_TypeExtension_Upload_ValidatorService.php')) && false ?: '_'};
    yield 3 => ${($_ = isset($this->services['form.type_extension.csrf']) ? $this->services['form.type_extension.csrf'] : $this->load(__DIR__.'/getForm_TypeExtension_CsrfService.php')) && false ?: '_'};
    yield 4 => ${($_ = isset($this->services['form.type_extension.form.data_collector']) ? $this->services['form.type_extension.form.data_collector'] : $this->load(__DIR__.'/getForm_TypeExtension_Form_DataCollectorService.php')) && false ?: '_'};
    yield 5 => ${($_ = isset($this->services['pim_ui.form.extension.help']) ? $this->services['pim_ui.form.extension.help'] : $this->services['pim_ui.form.extension.help'] = new \Akeneo\Platform\Bundle\UIBundle\Form\Extension\FormTypeHelpExtension()) && false ?: '_'};
    yield 6 => ${($_ = isset($this->services['pim_ui.form.extension.select2']) ? $this->services['pim_ui.form.extension.select2'] : $this->services['pim_ui.form.extension.select2'] = new \Akeneo\Platform\Bundle\UIBundle\Form\Extension\FormTypeSelect2Extension()) && false ?: '_'};
}, 7), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.repeated.validator']) ? $this->services['form.type_extension.repeated.validator'] : $this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()) && false ?: '_'};
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.submit.validator']) ? $this->services['form.type_extension.submit.validator'] : $this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()) && false ?: '_'};
}, 1)), new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_guesser.doctrine']) ? $this->services['form.type_guesser.doctrine'] : $this->load(__DIR__.'/getForm_TypeGuesser_DoctrineService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['form.type_guesser.validator']) ? $this->services['form.type_guesser.validator'] : $this->load(__DIR__.'/getForm_TypeGuesser_ValidatorService.php')) && false ?: '_'};
}, 2), NULL)), ${($_ = isset($this->services['form.resolved_type_factory']) ? $this->services['form.resolved_type_factory'] : $this->load(__DIR__.'/getForm_ResolvedTypeFactoryService.php')) && false ?: '_'});
