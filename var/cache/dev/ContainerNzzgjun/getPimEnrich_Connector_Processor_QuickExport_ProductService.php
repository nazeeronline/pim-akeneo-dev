<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'pim_enrich.connector.processor.quick_export.product' shared service.

return $this->services['pim_enrich.connector.processor.quick_export.product'] = new \Akeneo\Pim\Enrichment\Component\Product\Connector\Processor\QuickExport\ProductAndProductModelProcessor(${($_ = isset($this->services['pim_catalog.normalizer.standard.product']) ? $this->services['pim_catalog.normalizer.standard.product'] : $this->load(__DIR__.'/getPimCatalog_Normalizer_Standard_ProductService.php')) && false ?: '_'}, ${($_ = isset($this->services['pim_catalog.repository.channel']) ? $this->services['pim_catalog.repository.channel'] : $this->getPimCatalog_Repository_ChannelService()) && false ?: '_'}, ${($_ = isset($this->services['pim_catalog.repository.attribute']) ? $this->services['pim_catalog.repository.attribute'] : $this->getPimCatalog_Repository_AttributeService()) && false ?: '_'}, ${($_ = isset($this->services['pim_catalog.values_filler.product']) ? $this->services['pim_catalog.values_filler.product'] : $this->load(__DIR__.'/getPimCatalog_ValuesFiller_ProductService.php')) && false ?: '_'}, ${($_ = isset($this->services['akeneo_storage_utils.doctrine.object_detacher']) ? $this->services['akeneo_storage_utils.doctrine.object_detacher'] : $this->load(__DIR__.'/getAkeneoStorageUtils_Doctrine_ObjectDetacherService.php')) && false ?: '_'}, ${($_ = isset($this->services['pim_user.provider.user']) ? $this->services['pim_user.provider.user'] : $this->load(__DIR__.'/getPimUser_Provider_UserService.php')) && false ?: '_'}, ${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage()) && false ?: '_'}, ${($_ = isset($this->services['pim_connector.processor.bulk_media_fetcher']) ? $this->services['pim_connector.processor.bulk_media_fetcher'] : $this->load(__DIR__.'/getPimConnector_Processor_BulkMediaFetcherService.php')) && false ?: '_'});
