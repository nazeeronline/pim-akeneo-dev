<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'pim_catalog.filter.chained' shared service.

$this->services['pim_catalog.filter.chained'] = $instance = new \Akeneo\Pim\Enrichment\Bundle\Filter\ChainedFilter();

$a = ${($_ = isset($this->services['pim_enrich.filter.product_value.locale']) ? $this->services['pim_enrich.filter.product_value.locale'] : $this->services['pim_enrich.filter.product_value.locale'] = new \Akeneo\Pim\Enrichment\Bundle\Filter\ProductValueLocaleFilter()) && false ?: '_'};
$b = ${($_ = isset($this->services['pim_enrich.filter.product_value.channel']) ? $this->services['pim_enrich.filter.product_value.channel'] : $this->services['pim_enrich.filter.product_value.channel'] = new \Akeneo\Pim\Enrichment\Bundle\Filter\ProductValueChannelFilter()) && false ?: '_'};

$instance->addCollectionFilter($a, 'pim.transform.product_value.flat');
$instance->addCollectionFilter($a, 'pim.transform.product_value.structured');
$instance->addCollectionFilter($a, 'pim.external_api.product.view');
$instance->addCollectionFilter($b, 'pim.transform.product_value.flat');
$instance->addCollectionFilter($b, 'pim.transform.product_value.structured');
$instance->addCollectionFilter($b, 'pim.external_api.product.view');

return $instance;
