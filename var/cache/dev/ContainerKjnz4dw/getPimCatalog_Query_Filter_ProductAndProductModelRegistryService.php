<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'pim_catalog.query.filter.product_and_product_model_registry' shared service.

$this->services['pim_catalog.query.filter.product_and_product_model_registry'] = $instance = new \Akeneo\Pim\Enrichment\Component\Product\Query\Filter\FilterRegistry(${($_ = isset($this->services['pim_catalog.repository.attribute']) ? $this->services['pim_catalog.repository.attribute'] : $this->getPimCatalog_Repository_AttributeService()) && false ?: '_'});

$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.identifier_field']) ? $this->services['pim_catalog.query.elasticsearch.filter.identifier_field'] : $this->getPimCatalog_Query_Elasticsearch_Filter_IdentifierFieldService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.label_or_identifier']) ? $this->services['pim_catalog.query.elasticsearch.filter.label_or_identifier'] : $this->services['pim_catalog.query.elasticsearch.filter.label_or_identifier'] = new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\Filter\Field\LabelOrIdentifierFilter(array(0 => 'label_or_identifier'), array(0 => 'CONTAINS'))) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.id']) ? $this->services['pim_catalog.query.elasticsearch.filter.id'] : $this->getPimCatalog_Query_Elasticsearch_Filter_IdService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.family']) ? $this->services['pim_catalog.query.elasticsearch.filter.family'] : $this->getPimCatalog_Query_Elasticsearch_Filter_FamilyService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.family_variant']) ? $this->services['pim_catalog.query.elasticsearch.filter.family_variant'] : $this->getPimCatalog_Query_Elasticsearch_Filter_FamilyVariantService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.group']) ? $this->services['pim_catalog.query.elasticsearch.filter.group'] : $this->getPimCatalog_Query_Elasticsearch_Filter_GroupService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.category']) ? $this->services['pim_catalog.query.elasticsearch.filter.category'] : $this->getPimCatalog_Query_Elasticsearch_Filter_CategoryService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.status']) ? $this->services['pim_catalog.query.elasticsearch.filter.status'] : $this->services['pim_catalog.query.elasticsearch.filter.status'] = new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\Filter\Field\StatusFilter(array(0 => 'enabled'), array(0 => '=', 1 => '!='))) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.boolean']) ? $this->services['pim_catalog.query.elasticsearch.filter.boolean'] : $this->getPimCatalog_Query_Elasticsearch_Filter_BooleanService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.doctrine.elasticsearch.filter.datetime']) ? $this->services['pim_catalog.doctrine.elasticsearch.filter.datetime'] : $this->getPimCatalog_Doctrine_Elasticsearch_Filter_DatetimeService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.completeness']) ? $this->services['pim_catalog.query.elasticsearch.filter.completeness'] : $this->load(__DIR__.'/getPimCatalog_Query_Elasticsearch_Filter_CompletenessService.php')) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.parent']) ? $this->services['pim_catalog.query.elasticsearch.filter.parent'] : $this->getPimCatalog_Query_Elasticsearch_Filter_ParentService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.document_type']) ? $this->services['pim_catalog.query.elasticsearch.filter.document_type'] : $this->services['pim_catalog.query.elasticsearch.filter.document_type'] = new \Akeneo\Pim\Enrichment\Bundle\Elasticsearch\Filter\Field\EntityTypeFilter(array(0 => 'entity_type'), array(0 => '='))) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.ancestor']) ? $this->services['pim_catalog.query.elasticsearch.filter.ancestor'] : $this->load(__DIR__.'/getPimCatalog_Query_Elasticsearch_Filter_AncestorService.php')) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.self_and_ancestor']) ? $this->services['pim_catalog.query.elasticsearch.filter.self_and_ancestor'] : $this->load(__DIR__.'/getPimCatalog_Query_Elasticsearch_Filter_SelfAndAncestorService.php')) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.identifier_attribute']) ? $this->services['pim_catalog.query.elasticsearch.filter.identifier_attribute'] : $this->getPimCatalog_Query_Elasticsearch_Filter_IdentifierAttributeService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.number']) ? $this->services['pim_catalog.query.elasticsearch.filter.number'] : $this->getPimCatalog_Query_Elasticsearch_Filter_NumberService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.doctrine.query.filter.date']) ? $this->services['pim_catalog.doctrine.query.filter.date'] : $this->getPimCatalog_Doctrine_Query_Filter_DateService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.text']) ? $this->services['pim_catalog.query.elasticsearch.filter.text'] : $this->getPimCatalog_Query_Elasticsearch_Filter_TextService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.text_area']) ? $this->services['pim_catalog.query.elasticsearch.filter.text_area'] : $this->getPimCatalog_Query_Elasticsearch_Filter_TextAreaService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.option']) ? $this->services['pim_catalog.query.elasticsearch.filter.option'] : $this->getPimCatalog_Query_Elasticsearch_Filter_OptionService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.price']) ? $this->services['pim_catalog.query.elasticsearch.filter.price'] : $this->getPimCatalog_Query_Elasticsearch_Filter_PriceService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.metric']) ? $this->services['pim_catalog.query.elasticsearch.filter.metric'] : $this->getPimCatalog_Query_Elasticsearch_Filter_MetricService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_catalog.query.elasticsearch.filter.media']) ? $this->services['pim_catalog.query.elasticsearch.filter.media'] : $this->getPimCatalog_Query_Elasticsearch_Filter_MediaService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim.reference_data.query.filter.reference_data']) ? $this->services['pim.reference_data.query.filter.reference_data'] : $this->getPim_ReferenceData_Query_Filter_ReferenceDataService()) && false ?: '_'});
$instance->register(${($_ = isset($this->services['pim_enrich.product_query_builder.filter.dummy']) ? $this->services['pim_enrich.product_query_builder.filter.dummy'] : $this->services['pim_enrich.product_query_builder.filter.dummy'] = new \Akeneo\Pim\Enrichment\Bundle\ProductQueryBuilder\Filter\DummyFilter(array(), array(0 => 'enabled', 1 => 'completeness'), array(0 => 'ALL'))) && false ?: '_'});

return $instance;
